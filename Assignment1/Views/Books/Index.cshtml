@model IEnumerable<Assignment1.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<form asp-action="Index" method="get" class="form-inline">
    <div class="form-actions no-color">
        <p>
            find by name: <input type="text" placeholder="Search" aria-label="Search" name="searchstring" value="@ViewData["CurrentFilter"]" />

            <input type="submit" value="search" class="btn btn-primary" /> |
            <a asp-action="index" class="btn btn-primary">back to full list</a>
        </p>
    </div>
    

</form>
<p>
    <a class="btn btn-success" asp-action="Create">Create New</a>
</p>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
             <th>
                @Html.DisplayNameFor(model => model.ImgUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pages)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Desc)
            </th>
           
            <th>
                @Html.DisplayNameFor(model => model.Store)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                
                <td>
                    <img src="@Html.DisplayFor(modelItem => item.ImgUrl) "/>
                </td>

                @*<td>
                    <img src="@("~/image/" + item.ImgUrl)" asp-append-version="true" width="250px" height="250px">
                </td>
*@
                <td>
                    @Html.DisplayFor(modelItem => item.Pages)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Desc)
                </td>
                
                <td>
                    @Html.DisplayFor(modelItem => item.Store.Id)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Isbn" class="btn btn-primary">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Isbn" class="btn btn-primary">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.Isbn" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div style="display:flex;text-align:center;justify-content:center">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @for (var i = 0; i < @ViewBag.numberOfPages; i++)
            {
                var style = (ViewBag.currentPage == @i) ? "active" : "";
                <li class="page-item @style">
                    <a class="page-link" asp-route-id="@i"
                   asp-route-searchString="@ViewData["CurrentFilter"]">@(i+1)</a>
                </li>
            }
        </ul>
    </nav>
</div>
