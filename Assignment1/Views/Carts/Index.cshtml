@model IEnumerable<Assignment1.Models.Cart>

@{
	ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if(Model.Count()>0)
{
	double Total = 0;
	int Stt = 0;
<table class="table table-bordered">
	<thead>
		<tr>
			<th>
				Numeric 
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Book.Title)
			</th>
			<th>
                @Html.DisplayNameFor(model => model.Book.ImgUrl)"
            </th>
			<th>
				@Html.DisplayNameFor(model => model.Book.Price)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Quantity)
			</th>
			<th>
				Total Price
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			double priceItem = item.Book.Price * item.Quantity;
			Total = priceItem + Total;
			<tr>
				<td>
					@(Stt++)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Book.Title)
				</td>
				<td>
                <img src="@Html.DisplayFor(modelItem => item.Book.ImgUrl)"/>
            </td>
				<td>
					@Html.DisplayFor(modelItem => item.Book.Price)
				</td>
				<td>
				<a asp-action="removeItem" asp-route-isbn="@item.BookIsbn" class="btn btn-primary">-</a> 
				@Html.DisplayFor(modelItem => item.Quantity) 
				<a asp-action="Increase" asp-route-isbn="@item.BookIsbn" class="btn btn-primary">+</a>
				</td>
				<td>
					@(Math.Round((item.Quantity) * (item.Book.Price),1))	
				</td>
				<td>
					  <a asp-action="Remove" asp-route-isbn="@item.BookIsbn" class="btn btn-primary">Remove</a>	
				</td>
			</tr>
		}
		<tr>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
			<td>Total: Total: @(Math.Round(Total,1))</td>
		</tr>
	</tbody>
	</table>
	<a asp-controller="Books" asp-action="Checkout" class="btn btn-primary">Checkout   </a> 
}
else
{
	<p class="alert alert-success">Cart Successfull</p>
}
<a asp-controller="Orders" asp-action="Index" class="btn btn-primary">History Order </a>